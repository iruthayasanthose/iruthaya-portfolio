{"mappings":"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","sources":["src/js/demo.js"],"sourcesContent":["{\n  // body element\n  const body = document.body;\n\n  // helper functions\n  const MathUtils = {\n    // linear interpolation\n    lerp: (a, b, n) => (1 - n) * a + n * b,\n    // distance between two points\n    distance: (x1, y1, x2, y2) => Math.hypot(x2 - x1, y2 - y1),\n  };\n\n  // get the mouse position\n  const getMousePos = (ev) => {\n    let posx = 0;\n    let posy = 0;\n    if (!ev) ev = window.event;\n    if (ev.pageX || ev.pageY) {\n      posx = ev.pageX;\n      posy = ev.pageY;\n    } else if (ev.clientX || ev.clientY) {\n      posx = ev.clientX + body.scrollLeft + docEl.scrollLeft;\n      posy = ev.clientY + body.scrollTop + docEl.scrollTop;\n    }\n    return { x: posx, y: posy };\n  };\n\n  // mousePos: current mouse position\n  // cacheMousePos: previous mouse position\n  // lastMousePos: last last recorded mouse position (at the time the last image was shown)\n  let mousePos = (lastMousePos = cacheMousePos = { x: 0, y: 0 });\n\n  // update the mouse position\n  window.addEventListener(\"mousemove\", (ev) => (mousePos = getMousePos(ev)));\n\n  // gets the distance from the current mouse position to the last recorded mouse position\n  const getMouseDistance = () =>\n    MathUtils.distance(mousePos.x, mousePos.y, lastMousePos.x, lastMousePos.y);\n\n  class Image {\n    constructor(el) {\n      this.DOM = { el: el };\n      // image deafult styles\n      this.defaultStyle = {\n        scale: 1,\n        x: 0,\n        y: 0,\n        opacity: 0,\n      };\n      // get sizes/position\n      this.getRect();\n      // init/bind events\n      this.initEvents();\n    }\n    initEvents() {\n      // on resize get updated sizes/position\n      window.addEventListener(\"resize\", () => this.resize());\n    }\n    resize() {\n      // reset styles\n      TweenMax.set(this.DOM.el, this.defaultStyle);\n      // get sizes/position\n      this.getRect();\n    }\n    getRect() {\n      this.rect = this.DOM.el.getBoundingClientRect();\n    }\n    isActive() {\n      // check if image is animating or if it's visible\n      return TweenMax.isTweening(this.DOM.el) || this.DOM.el.style.opacity != 0;\n    }\n  }\n\n  class ImageTrail {\n    constructor() {\n      // images container\n      this.DOM = { content: document.querySelector(\".content\") };\n      // array of Image objs, one per image element\n      this.images = [];\n      [...this.DOM.content.querySelectorAll(\"img\")].forEach((img) =>\n        this.images.push(new Image(img))\n      );\n      // total number of images\n      this.imagesTotal = this.images.length;\n      // upcoming image index\n      this.imgPosition = 0;\n      // zIndex value to apply to the upcoming image\n      this.zIndexVal = 1;\n      // mouse distance required to show the next image\n      this.threshold = 100;\n      // render the images\n      requestAnimationFrame(() => this.render());\n    }\n    render() {\n      // get distance between the current mouse position and the position of the previous image\n      let distance = getMouseDistance();\n      // cache previous mouse position\n      cacheMousePos.x = MathUtils.lerp(\n        cacheMousePos.x || mousePos.x,\n        mousePos.x,\n        0.1\n      );\n      cacheMousePos.y = MathUtils.lerp(\n        cacheMousePos.y || mousePos.y,\n        mousePos.y,\n        0.1\n      );\n\n      // if the mouse moved more than [this.threshold] then show the next image\n      if (distance > this.threshold) {\n        this.showNextImage();\n\n        ++this.zIndexVal;\n        this.imgPosition =\n          this.imgPosition < this.imagesTotal - 1 ? this.imgPosition + 1 : 0;\n\n        lastMousePos = mousePos;\n      }\n\n      // check when mousemove stops and all images are inactive (not visible and not animating)\n      let isIdle = true;\n      for (let img of this.images) {\n        if (img.isActive()) {\n          isIdle = false;\n          break;\n        }\n      }\n      // reset z-index initial value\n      if (isIdle && this.zIndexVal !== 1) {\n        this.zIndexVal = 1;\n      }\n\n      // loop..\n      requestAnimationFrame(() => this.render());\n    }\n    showNextImage() {\n      // show image at position [this.imgPosition]\n      const img = this.images[this.imgPosition];\n      // kill any tween on the image\n      TweenMax.killTweensOf(img.DOM.el);\n\n      new TimelineMax()\n        // show the image\n        .set(\n          img.DOM.el,\n          {\n            startAt: { opacity: 0, scale: 1 },\n            opacity: 1,\n            scale: 1,\n            zIndex: this.zIndexVal,\n            x: cacheMousePos.x - img.rect.width / 2,\n            y: cacheMousePos.y - img.rect.height / 2,\n          },\n          0\n        )\n        // animate position\n        .to(\n          img.DOM.el,\n          0.9,\n          {\n            ease: Expo.easeOut,\n            x: mousePos.x - img.rect.width / 2,\n            y: mousePos.y - img.rect.height / 2,\n          },\n          0\n        )\n        // then make it disappear\n        .to(\n          img.DOM.el,\n          1,\n          {\n            ease: Power1.easeOut,\n            opacity: 0,\n          },\n          0.4\n        )\n        // scale down the image\n        .to(\n          img.DOM.el,\n          1,\n          {\n            ease: Quint.easeOut,\n            scale: 0.2,\n          },\n          0.4\n        );\n    }\n  }\n\n  /***********************************/\n  /********** Preload stuff **********/\n\n  // Preload images\n  const preloadImages = () => {\n    return new Promise((resolve, reject) => {\n      imagesLoaded(document.querySelectorAll(\".content__img\"), resolve);\n    });\n  };\n\n  // And then..\n  preloadImages().then(() => {\n    // Remove the loader\n    document.body.classList.remove(\"loading\");\n    new ImageTrail();\n  });\n}\n"],"names":["body","document","MathUtils","lerp","a","b","n","distance","x1","y1","x2","y2","Math","hypot","getMousePos","ev","posx","posy","window","event","pageX","pageY","clientX","clientY","scrollLeft","docEl","scrollTop","x","y","mousePos","lastMousePos","cacheMousePos","addEventListener","getMouseDistance","Image","el","this","DOM","defaultStyle","scale","opacity","getRect","initEvents","resize","TweenMax","set","rect","getBoundingClientRect","isActive","isTweening","style","ImageTrail","content","querySelector","images","querySelectorAll","forEach","img","push","imagesTotal","length","imgPosition","zIndexVal","threshold","requestAnimationFrame","render","showNextImage","isIdle","killTweensOf","TimelineMax","startAt","zIndex","width","height","to","ease","Expo","easeOut","Power1","Quint","Promise","resolve","reject","imagesLoaded","preloadImages","then","classList","remove"],"version":3,"file":"index.8a8dabed.js.map"}